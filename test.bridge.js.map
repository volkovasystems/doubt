{"version":3,"sources":["test.bridge.js"],"names":["assert","require","path","describe","testBridge","resolve","__dirname","bridgeURL","it","equal","browser","url","execute","doubt","ARRAY","value","ARRAY_LIKE","ITERABLE","AS_ARRAY","arguments","ARGUMENTS","Infinity","NaN"],"mappings":"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","file":"test.bridge.js","sourcesContent":["\"use strict\";\n\n/*;\n\t@test-license:\n\t\tThe MIT License (MIT)\n\t\t@mit-license\n\n\t\tCopyright (@c) 2017 Richeve Siodina Bebedor\n\t\t@email: richeve.bebedor@gmail.com\n\n\t\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\t\tof this software and associated documentation files (the \"Software\"), to deal\n\t\tin the Software without restriction, including without limitation the rights\n\t\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t\tcopies of the Software, and to permit persons to whom the Software is\n\t\tfurnished to do so, subject to the following conditions:\n\n\t\tThe above copyright notice and this permission notice shall be included in all\n\t\tcopies or substantial portions of the Software.\n\n\t\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\t\tSOFTWARE.\n\t@end-test-license\n\n\t@test-configuration:\n\t\t{\n\t\t\t\"package\": \"doubt\",\n\t\t\t\"path\": \"doubt/test.module.js\",\n\t\t\t\"file\": \"test.module.js\",\n\t\t\t\"module\": \"test\",\n\t\t\t\"author\": \"Richeve S. Bebedor\",\n\t\t\t\"eMail\": \"richeve.bebedor@gmail.com\",\n\t\t\t\"contributors\": [\n\t\t\t\t\"John Lenon Maghanoy <johnlenonmaghanoy@gmail.com>\",\n\t\t\t\t\"Vinse Vinalon <vinsevinalon@gmail.com>\"\n\t\t\t],\n\t\t\t\"repository\": \"https://github.com/volkovasystems/doubt.git\"\n\t\t}\n\t@end-test-configuration\n\n\t@test-documentation:\n\t\tTest module for doubt.\n\t@end-test-documentation\n\n\t@include:\n\t\t{\n\t\t\t\"assert\": \"should\",\n\t\t\t\"doubt\": \"doubt\",\n\t\t\t\"path\": \"path\"\n\t\t}\n\t@end-include\n*/\n\nconst assert = require( \"should\" );\n\n\n\n\n\n//: @bridge:\nconst path = require( \"path\" );\n//: @end-bridge\n\ndescribe( \"doubt\", ( ) => {\n\t\n\n\t//: @bridge:\n\tlet testBridge = path.resolve( __dirname, \"bridge.html\" );\n\tlet bridgeURL = `file://${ testBridge }`;\n\n\tdescribe( \"`doubt( [ ], ARRAY )`\", ( ) => {\n\t\tit( \"should return true\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( [ ], ARRAY ) ).value, true );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( [ ], ARRAY_LIKE )`\", ( ) => {\n\t\tit( \"should return true\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( [ ], ARRAY_LIKE ) ).value, true );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( [ ], ITERABLE )`\", ( ) => {\n\t\tit( \"should return true\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( [ ], ITERABLE ) ).value, true );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( [ ], AS_ARRAY )`\", ( ) => {\n\t\tit( \"should return true\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( [ ], AS_ARRAY ) ).value, true );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( [ 1, 2, 3 ], ARRAY )`\", ( ) => {\n\t\tit( \"should return true\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( [ 1, 2, 3 ], ARRAY ) ).value, true );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( [ 1, 2, 3 ], ARRAY_LIKE )`\", ( ) => {\n\t\tit( \"should return true\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( [ 1, 2, 3 ], ARRAY_LIKE ) ).value, true );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( [ 1, 2, 3 ], ITERABLE )`\", ( ) => {\n\t\tit( \"should return true\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( [ 1, 2, 3 ], ITERABLE ) ).value, true );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( [ 1, 2, 3 ], AS_ARRAY )`\", ( ) => {\n\t\tit( \"should return true\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( [ 1, 2, 3 ], AS_ARRAY ) ).value, true );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( ( function( ){ return arguments; } )( ), ARGUMENTS )`\", ( ) => {\n\t\tit( \"should return true\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( ( function( ){ return arguments; } )( ), ARGUMENTS ) ).value, true );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( ( function( ){ return arguments; } )( ), ARRAY_LIKE )`\", ( ) => {\n\t\tit( \"should return true\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( ( function( ){ return arguments; } )( ), ARRAY_LIKE ) ).value, true );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( ( function( ){ return arguments; } )( ), ITERABLE )`\", ( ) => {\n\t\tit( \"should return true\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( ( function( ){ return arguments; } )( ), ITERABLE ) ).value, true );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( ( function( ){ return arguments; } )( ), AS_ARRAY )`\", ( ) => {\n\t\tit( \"should return true\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( ( function( ){ return arguments; } )( ), AS_ARRAY ) ).value, true );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( ( function( ){ return arguments; } )( 'hello', 'world' ) ).value, ARGUMENTS )`\", ( ) => {\n\t\tit( \"should return true\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( ( function( ){ return arguments; } )( \"hello\", \"world\" ), ARGUMENTS ) ).value, true );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( ( function( ){ return arguments; } )( 'hello', 'world' ) ).value, ARRAY_LIKE )`\", ( ) => {\n\t\tit( \"should return true\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( ( function( ){ return arguments; } )( \"hello\", \"world\" ), ARRAY_LIKE ) ).value, true );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( ( function( ){ return arguments; } )( 'hello', 'world' ) ).value, ITERABLE )`\", ( ) => {\n\t\tit( \"should return true\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( ( function( ){ return arguments; } )( \"hello\", \"world\" ), ITERABLE ) ).value, true );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( ( function( ){ return arguments; } )( 'hello', 'world' ) ).value, AS_ARRAY )`\", ( ) => {\n\t\tit( \"should return true\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( ( function( ){ return arguments; } )( \"hello\", \"world\" ), AS_ARRAY ) ).value, true );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( { 'length': 0 }, ARRAY_LIKE )`\", ( ) => {\n\t\tit( \"should return true\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( { \"length\": 0 }, ARRAY_LIKE ) ).value, true );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( { 'length': 0 }, AS_ARRAY )`\", ( ) => {\n\t\tit( \"should return true\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( { \"length\": 0 }, AS_ARRAY ) ).value, true );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( [ ], ARGUMENTS )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( [ ], ARGUMENTS ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( ( function( ){ return arguments; } )( ), ARRAY )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( ( function( ){ return arguments; } )( ), ARRAY ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( { 'length': 0 }, ARRAY )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( { \"length\": 0 }, ARRAY ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( { 'length': 0 }, ARGUMENTS )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( { \"length\": 0 }, ARGUMENTS ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( { 'length': 0 }, ITERABLE )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( { \"length\": 0 }, ITERABLE ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( 'hello world', ARRAY )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( \"hello world\", ARRAY ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( 'hello world', ARGUMENTS )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( \"hello world\", ARGUMENTS ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( 'hello world', ARRAY_LIKE )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( \"hello world\", ARRAY_LIKE ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( 'hello world', ITERABLE )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( \"hello world\", ITERABLE ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( 'hello world', AS_ARRAY )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( \"hello world\", AS_ARRAY ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( 123, ARRAY )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( 123, ARRAY ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( 123, ARGUMENTS )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( 123, ARGUMENTS ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( 123, ARRAY_LIKE )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( 123, ARRAY_LIKE ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( 123, ITERABLE )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( 123, ITERABLE ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( 123, AS_ARRAY )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( 123, AS_ARRAY ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( 0, ARRAY )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( 0, ARRAY ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( 0, ARGUMENTS )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( 0, ARGUMENTS ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( 0, ARRAY_LIKE )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( 0, ARRAY_LIKE ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( 0, ITERABLE )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( 0, ITERABLE ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( 0, AS_ARRAY )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( 0, AS_ARRAY ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( Infinity, ARRAY )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( Infinity, ARRAY ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( Infinity, ARGUMENTS )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( Infinity, ARGUMENTS ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( Infinity, ARRAY_LIKE )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( Infinity, ARRAY_LIKE ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( Infinity, ITERABLE )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( Infinity, ITERABLE ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( Infinity, AS_ARRAY )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( Infinity, AS_ARRAY ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( NaN, ARRAY )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( NaN, ARRAY ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( NaN, ARGUMENTS )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( NaN, ARGUMENTS ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( NaN, ARRAY_LIKE )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( NaN, ARRAY_LIKE ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( NaN, ITERABLE )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( NaN, ITERABLE ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( NaN, AS_ARRAY )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( NaN, AS_ARRAY ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( true, ARRAY )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( true, ARRAY ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( true, ARGUMENTS )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( true, ARGUMENTS ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( true, ARRAY_LIKE )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( true, ARRAY_LIKE ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( true, ITERABLE )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( true, ITERABLE ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( true, AS_ARRAY )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( true, AS_ARRAY ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( false, ARRAY )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( false, ARRAY ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( false, ARGUMENTS )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( false, ARGUMENTS ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( false, ARRAY_LIKE )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( false, ARRAY_LIKE ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( false, ITERABLE )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( false, ITERABLE ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( false, AS_ARRAY )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( false, AS_ARRAY ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( { }, ARRAY )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( { }, ARRAY ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( { }, ARGUMENTS )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( { }, ARGUMENTS ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( { }, ARRAY_LIKE )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( { }, ARRAY_LIKE ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( { }, ITERABLE )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( { }, ITERABLE ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( { }, AS_ARRAY )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( { }, AS_ARRAY ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( { 'hello': 'world' }, ARRAY )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( { 'hello': 'world' }, ARRAY ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( { 'hello': 'world' }, ARGUMENTS )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( { 'hello': 'world' }, ARGUMENTS ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( { 'hello': 'world' }, ARRAY_LIKE )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( { 'hello': 'world' }, ARRAY_LIKE ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( { 'hello': 'world' }, ITERABLE )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( { 'hello': 'world' }, ITERABLE ) ).value, false );\n\t\t} );\n\t} );\n\n\tdescribe( \"`doubt( { 'hello': 'world' }, AS_ARRAY )`\", ( ) => {\n\t\tit( \"should return false\", ( ) => {\n\t\t\tassert.equal( browser.url( bridgeURL ).execute( ( ) => doubt( { 'hello': 'world' }, AS_ARRAY ) ).value, false );\n\t\t} );\n\t} );\n\t//: @end-bridge\n} );\n"]}